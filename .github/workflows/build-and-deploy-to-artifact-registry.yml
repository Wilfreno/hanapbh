name: Build and Deploy to Artifact registry

on:
  push:
    tags:
      - "*"

env:
  PROJECT_ID: hanapbh
  GAR_LOCATION: asia-southeast1
  CLIENT_SERVICE: hanapbh-client
  SERVER_SERVICE: hanapbh-server
  REGION: asia-southeast1

jobs:
  build_push_to_docker_hub:
    permissions:
      contents: "write"
      issues: "write"
      pull-requests: "write"
      id-token: "write"
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: "v2.2.4"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            "${{ env.GAR_LOCATION }}/${{ env.CLIENT_SERVICE }}"
            "${{ env.GAR_LOCATION }}/${{ env.SERVER_SERVICE }}"
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Determine Tag
        id: tag
        run: |
          # Determine the tag based on the repository or branch
          echo "REPO_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build Client Image
        run: |-
          docker build -t "${{ env.CLIENT_SERVICE }}:${{ env.REPO_TAG }}" ./client \
          --build-arg GOOGLE_CLIENT_ID="${{secrets.GOOGLE_CLIENT_ID}}" \
          --build-arg GOOGLE_CLIENT_SECRET="${{secrets.GOOGLE_CLIENT_SECRET}}" \
          --build-arg GOOGLE_PLACES_API_KEY="${{secrets.GOOGLE_PLACES_API_KEY}}" \
          --build-arg NEXT_PUBLIC_SERVER="${{secrets.NEXT_PUBLIC_SERVER}}" \
          --build-arg SERVER_URL="${{secrets.SERVER_URL}}" \
          --build-arg ClIENT_URL="${{secrets.ClIENT_URL}}" \
          --build-arg NEXTAUTH_SECRET="${{secrets.NEXTAUTH_SECRET}}" \
          --build-arg NEXTAUTH_URL="${{secrets.NEXTAUTH_URL}}"

      - name: Tag Client Image
        run: docker tag "${{ env.CLIENT_SERVICE }}:${{ env.REPO_TAG }}" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.CLIENT_SERVICE }}/${{ env.CLIENT_SERVICE }}:${{env.REPO_TAG }}"

      - name: Push Client Image to Artifact Registry
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.CLIENT_SERVICE }}/${{ env.CLIENT_SERVICE }}:${{env.REPO_TAG }}"

      - name: Build Server Image
        run: |-
          docker build -t "${{env.SERVER_SERVICE}}:${{ env.REPO_TAG }}" ./server \
          --build-arg GOOGLE_GEOCODE_API_KEY="${{secrets.GOOGLE_GEOCODE_API_KEY}}" \
          --build-arg GOOGLE_PLACES_API_KEY="${{secrets.GOOGLE_PLACES_API_KEY}}" \
          --build-arg MONGODB_URI="${{secrets.MONGODB_URI}}" \
          --build-arg GMAIL_2F_AUTH_APP_PASS="${{secrets.GMAIL_2F_AUTH_APP_PASS}}"

      - name: Tag Server Image
        run: docker tag "${{env.SERVER_SERVICE}}:${{ env.REPO_TAG }}" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}/${{ env.SERVER_SERVICE }}:${{ env.REPO_TAG }}"

      - name: Push Server Image to Artifact Registry
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}/${{ env.SERVER_SERVICE }}:${{ env.REPO_TAG }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVER_SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}:${{ env.REPO_TAG }}

      - name: Saving New Docker Images to README file
        run: |
          CLIENT_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.CLIENT_SERVICE }}/${{ env.CLIENT_SERVICE }}:${{env.REPO_TAG }}"
          SERVER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}/${{ env.SERVER_SERVICE }}:${{ env.REPO_TAG }}"

          sed -i 's|Client: .*|Client: $CLIENT_TAG|' README.md
          sed -i 's|Server: .*|Server: $SERVER_TAG|' README.md

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -m 'Update README.md with latest Docker image tags'
          git push
