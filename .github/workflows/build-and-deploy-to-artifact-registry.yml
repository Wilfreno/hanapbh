name: Build and Deploy to Docker Hub

on:
  push:

env:
  PROJECT_ID: hanapbh
  GAR_LOCATION: asia-southeast1
  CLIENT_SERVICE: hanapbh-client
  SERVER_SERVICE: hanapbh-server
  REGION: asia-southeast1
  REGISTRY: wing09

jobs:
  build_push_to_docker_hub:
    permissions:
      contents: "write"
      issues: "write"
      pull-requests: "write"
      id-token: "write"
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Semantic Release
        run: pnpm install -g semantic-release

      - name: Install Dependencies
        run: pnpm install

      - name: run semantic release
        id: semantic_release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            "${{ env.REGISTRY }}/${{ env.CLIENT_SERVICE }}"
            "${{ env.REGISTRY }}/${{ env.SERVER_SERVICE }}"
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Clien Docker Image
        id: client-build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            GOOGLE_CLIENT_ID="${{secrets.GOOGLE_CLIENT_ID}}"
            GOOGLE_CLIENT_SECRET="${{secrets.GOOGLE_CLIENT_SECRET}}"
            GOOGLE_PLACES_API_KEY="${{secrets.GOOGLE_PLACES_API_KEY}}"
            NEXT_PUBLIC_SERVER="${{secrets.NEXT_PUBLIC_SERVER}}"
            SERVER_URL="${{secrets.SERVER_URL}}"
            ClIENT_URL="${{secrets.ClIENT_URL}}"
            NEXTAUTH_SECRET="${{secrets.NEXTAUTH_SECRET}}"
            NEXTAUTH_URL="${{secrets.NEXTAUTH_URL}}"

<<<<<<< HEAD
      - name: Build Server Image
        run: |-
          docker build -t "wing/09${{env.SERVER_SERVICE}}:latest" ./server \
          --build-arg GOOGLE_GEOCODE_API_KEY="${{secrets.GOOGLE_GEOCODE_API_KEY}}" \
          --build-arg GOOGLE_PLACES_API_KEY="${{secrets.GOOGLE_PLACES_API_KEY}}" \
          --build-arg MONGODB_URI="${{secrets.MONGODB_URI}}" \
          --build-arg GMAIL_2F_AUTH_APP_PASS="${{secrets.GMAIL_2F_AUTH_APP_PASS}}"

      - name: run semantic release
        run: pnpm install && npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
=======
      - name: Build and Push Server Docker Image
        id: server-build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            GOOGLE_GEOCODE_API_KEY="${{secrets.GOOGLE_GEOCODE_API_KEY}}"
            GOOGLE_PLACES_API_KEY="${{secrets.GOOGLE_PLACES_API_KEY}}"
            MONGODB_URI="${{secrets.MONGODB_URI}}"
            GMAIL_2F_AUTH_APP_PASS="${{secrets.GMAIL_2F_AUTH_APP_PASS}}"
<<<<<<< HEAD
>>>>>>> 07ea0d5 (test)
=======

      - name: Saving New Docker Images to README file
        run: |
          CLIENT_TAG="${{ env.REGISTRY }}/${{ env.CLIENT_SERVICE }}:${{ steps.meta.outputs.tags }}"
          SERVER_TAG="${{ env.REGISTRY }}/${{ env.SERVER_SERVICE }}:${{ steps.meta.outputs.tags }}"

          sed -i 's|Client: .*|Client: $CLIENT_TAG|' README.md
          sed -i 's|Server: .*|Server: $SERVER_TAG|' README.md

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -m 'Update README.md with latest Docker image tags'
          git push
>>>>>>> 8f7b9ce (test)
