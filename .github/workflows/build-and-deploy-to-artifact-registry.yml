name: Build and Deploy to Artifact Registry

on:
  push:
    branches: [main]

env:
  PROJECT_ID: hanapbh
  GAR_LOCATION: asia-southeast1
  CLIENT_SERVICE: hanapbh-client
  SERVER_SERVICE: hanapbh-server
  REGION: asia-southeast1

jobs:
  deploy:
    permissions:
      contents: "write"
      issues: "write"
      pull-requests: "write"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Semantic Release
        run: pnpm install -g semantic-release

      - name: Tagging
        run: pnpm install && npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Determine Tag
        id: tag
        run: |
          # Determine the tag based on the repository or branch
          echo "REPO_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}" # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}" # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Client Image
        run: |-
          docker build -t "${{ env.CLIENT_SERVICE }}:${{ env.REPO_TAG }}" ./client \
          --build-arg GOOGLE_CLIENT_ID=${{secrets.GOOGLE_CLIENT_ID}} \
          --build-arg GOOGLE_CLIENT_SECRET=${{secrets.GOOGLE_CLIENT_SECRET}} \
          --build-arg GOOGLE_PLACES_API_KEY=${{secrets.GOOGLE_PLACES_API_KEY}} \
          --build-arg NEXT_PUBLIC_SERVER=${{secrets.NEXT_PUBLIC_SERVER}} \
          --build-arg SERVER_URL=${{secrets.SERVER_URL}} \
          --build-arg ClIENT_URL=${{secrets.ClIENT_URL}} \
          --build-arg NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}} \
          --build-arg NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}}

      - name: Tag Client Image
        run: docker tag "${{ env.CLIENT_SERVICE }}:${{ env.REPO_TAG }}" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.CLIENT_SERVICE }}/${{ env.CLIENT_SERVICE }}:${{env.REPO_TAG }}"

      - name: Push Client Image to Artifact Registry
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.CLIENT_SERVICE }}/${{ env.CLIENT_SERVICE }}:${{env.REPO_TAG }}"

      - name: Build Server Image
        run: |-
          docker build -t "${{env.SERVER_SERVICE}}:${{ env.REPO_TAG }}" ./server \
          --build-arg GOOGLE_GEOCODE_API_KEY="${{secrets.GOOGLE_GEOCODE_API_KEY}}" \
          --build-arg GOOGLE_PLACES_API_KEY="${{secrets.GOOGLE_PLACES_API_KEY}}" \
          --build-arg MONGODB_URI="${{secrets.MONGODB_URI}}" \
          --build-arg GMAIL_2F_AUTH_APP_PASS="${{secrets.GMAIL_2F_AUTH_APP_PASS}}"

      - name: Tag Server Image
        run: docker tag "${{env.SERVER_SERVICE}}:${{ env.REPO_TAG }}" "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}/${{ env.SERVER_SERVICE }}:${{ env.REPO_TAG }}"

      - name: Push Server Image to Artifact Registry
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}/${{ env.SERVER_SERVICE }}:${{ env.REPO_TAG }}"

      # Update markdown file with latest tags
      - name: Update markdown file
        run: |
          CLIENT_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.CLIENT_SERVICE }}:${{ github.sha }}"
          SERVER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVER_SERVICE }}:${{ github.sha }}"
          sed -i "s|Client: .*|Client: $CLIENT_TAG|" README.md
          sed -i "s|Server: .*|Server: $SERVER_TAG|" README.md
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update README.md with latest Docker image tags"
          git push
